

def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)
print(factorial(0))
print(factorial(5))
print(factorial(10))

def max_of_three(numbers):
    a, b, c = numbers
    return max(a, b, c)
print(max_of_three((1, 5, 7)))

def calculate_right_triangle_area(leg1, leg2):
    area = 0.5 * leg1 * leg2
    return area
leg1 = 3
leg2 = 4
area = calculate_right_triangle_area(leg1, leg2)
print(f"The area of the triangle with legs of length {leg1} and {leg2} is {area}.")

def make_court_nominative_case(court_name: str) -> str:
    """
:param court_name:
:return:
"""
words = court_name.split(" ")[2::]
text = "Арбитражный суд"
for i in words:
    text += f"{i}"
    return text
def make_a_header(court, plaintiff, respondent):
    text = f"-------------------------------\n" \
 f"В {make_court_nominative_case(court['court_name'])}\n" \
f"Адрес: {court['court_address']}\n\n" \
f"" \
f"Истец: {plaintiff['name']}" \
f"ИНН {plaintiff['inn']} ОГРНИП {plaintiff['ogrnip']}\n" \
f"Адрес: {plaintiff['address']}\n\n" \
f"" \
f"Ответчик: {respondent['short_name']}”\n" \
f"ИНН {respondent['inn']} ОГРН {respondent['ogrn']}\n" \
f"Адрес: {respondent['address']}\n\n" \
f"" \
f"Номер дела {respondent['case_number']}\n"
    return text

def task_2():
    plaintiff = {
     "name": "Сергиенко Валерия Андреевна",
    "in n": "7755664499",
    "ogrnip": "218393939",
    "address": "123534, г. Казань, ул. Ленина, 70"}

cleaned_respondents = [i for i in respondents if i.get("case_number")]
for respondent in cleaned_respondents:
    court_code = respondent["case_number"].split("-")[0]
    court = courts[court_code]
    result = make_a_header(court, plaintiff, respondent)
    print(result)
